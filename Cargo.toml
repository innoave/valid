[package]
name = "valid"
version = "0.1.0"  # remember to update html_root_url
authors = ["haraldmaida"]
license = "MIT/Apache-2.0"

description = """
Let the business logic only accept valid values! Validate custom types by composing primitive
validation functions. Use one common API for validating all kind of business rules including
aspects of the application state. One common error type for all kind of constraint violations. It
is designed to help with error messages that are meaningful to the user of an application.
"""

keywords = ["validate", "user-input", "business-rules", "constraints", "validation"]
categories = ["rust-patterns", "value-formatting"]
documentation = "https://docs.rs/valid"
repository = "https://github.com/innoave/valid"
readme = "README.md"

edition = "2018"

[badges]
maintenance = { status = "actively-developed" }

[features]
default = []
serde1 = ["serde", "bigdecimal/serde", "chrono/serde"]

[dependencies]
bigdecimal = { version = "0.1", optional = true }
chrono = { version = "0.4", optional = true }
serde = { version = "1", optional = true, features = ["derive"] }

[dev-dependencies]
failure = "0.1"
proptest = "0.9"
version-sync = "0.8"

[package.metadata.docs.rs]
all-features = true
