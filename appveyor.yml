
version: '0.1.0.{build}'

image: Visual Studio 2017

environment:
  matrix:
    - channel: stable
      target: x86_64-pc-windows-msvc
    - channel: stable
      target: i686-pc-windows-msvc
    - channel: beta
      target: x86_64-pc-windows-msvc
    - channel: beta
      target: i686-pc-windows-msvc
    - channel: nightly
      target: x86_64-pc-windows-msvc
      #cargoflags: --features "unstable"
    - channel: nightly
      target: i686-pc-windows-msvc
      #cargoflags: --features "unstable"
    - channel: stable
      target: x86_64-pc-windows-gnu
    - channel: stable
      target: i686-pc-windows-gnu
    - channel: beta
      target: x86_64-pc-windows-gnu
    - channel: beta
      target: i686-pc-windows-gnu
    - channel: nightly
      target: x86_64-pc-windows-gnu
      #cargoflags: --features "unstable"
    - channel: nightly
      target: i686-pc-windows-gnu
      #cargoflags: --features "unstable"

matrix:
  allow_failures:
    - channel: nightly

install:
  - appveyor DownloadFile https://win.rustup.rs/ -FileName rustup-init.exe
  - rustup-init -yv --default-toolchain %channel% --default-host %target%
  - set PATH=%PATH%;%USERPROFILE%\.cargo\bin
  - rustc -vV
  - cargo -vV

# 'cargo test' takes care of building for us, so disable Appveyor's build stage. This prevents
# the "directory does not contain a project or solution file" error.
build: false

# Uses 'cargo test' to run tests and build. Alternatively, the project may call compiled programs
# directly or perform other testing commands. Rust will automatically be placed in the PATH
# environment variable.
test_script:
  - cargo build --verbose %cargoflags%
  - cargo test --verbose %cargoflags%
  - cargo build --all-features --verbose %cargoflags%
  - cargo test --all-features --verbose %cargoflags%
  - cargo test --features "serde1" --verbose %cargoflags%
  - cargo test --features "bigint" --verbose %cargoflags%
  - cargo test --features "bigdecimal" --verbose %cargoflags%
  - cargo test --features "chrono" --verbose %cargoflags%
  - cargo test --features "regex" --verbose %cargoflags%
